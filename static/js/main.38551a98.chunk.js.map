{"version":3,"sources":["App.js","index.js"],"names":["App","React","useState","search","setSearch","results","setResults","searchInfo","setSearchInfo","random","setRandom","handleSearch","e","a","preventDefault","endpoint","fetch","response","console","log","json","query","searchinfo","getRandom","className","onSubmit","type","placeholder","name","id","value","onChange","target","onClick","totalhits","length","map","result","i","url","pageid","title","dangerouslySetInnerHTML","__html","snippet","href","rel","extract","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NA0GeA,EAxGH,WACV,MAA4BC,IAAMC,SAAS,IAA3C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BH,IAAMC,SAAS,IAA7C,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAoCL,IAAMC,SAAS,IAAnD,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA4BP,IAAMC,SAAS,IAA3C,mBAAOO,EAAP,KAAeC,EAAf,KAEMC,EAAY,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,yDACnBD,EAAEE,iBACa,KAAXX,EAFe,iEAKXY,EALW,0IAKmIZ,GALnI,SAMMa,MAAMD,GANZ,cAMXE,EANW,OAOjBC,QAAQC,IAAIF,GAPK,UASEA,EAASG,OATX,QASXA,EATW,OAUjBF,QAAQC,IAAIC,GAEZd,EAAWc,EAAKC,MAAMlB,QACtBO,EAAU,IACVF,EAAcY,EAAKC,MAAMC,YAdR,kDAgBjBJ,QAAQC,IAAR,MAhBiB,0DAAH,sDAqBZI,EAAS,uCAAG,8BAAAV,EAAA,6DAChBK,QAAQC,IAAI,UADI,SAGF,2DAHE,SAKSH,MAFX,4DAHE,cAKRC,EALQ,gBAOKA,EAASG,OAPd,OAORA,EAPQ,OAQdF,QAAQC,IAAIC,GAEZV,EAAUU,GACVd,EAAW,IACXE,EAAc,IAZA,kDAcdU,QAAQC,IAAR,MAdc,0DAAH,qDAkBf,OACE,qCACE,6CACA,sBAAMK,UAAU,aAAaC,SAAUd,EAAvC,SACE,uBACEe,KAAK,SACLC,YAAY,yBACZC,KAAK,OACLC,GAAG,SACHC,MAAO3B,EACP4B,SAAU,SAACnB,GAAD,OAAOR,EAAUQ,EAAEoB,OAAOF,YAIxC,wBAAQJ,KAAK,SAASG,GAAG,SAASI,QAASV,EAA3C,4BAIChB,EAAW2B,UACV,iDAAoB3B,EAAW2B,aAE/B,GAGF,qBAAKV,UAAU,UAAf,SACqB,IAAlBf,EAAO0B,OACN9B,EAAQ+B,KAAI,SAACC,EAAQC,GACnB,IAAMC,EAAG,0CAAsCF,EAAOG,QACtD,OACE,qBAAKhB,UAAU,SAAf,SACE,gCACE,6BAAKa,EAAOI,QACZ,mBAAGC,wBAAyB,CAAEC,OAAQN,EAAOO,WAC7C,mBAAGC,KAAMN,EAAKP,OAAO,SAASc,IAAI,aAAlC,2BAJyBR,MAYjC,sBAAKd,UAAU,SAAf,UACGf,EAAOgC,MACR,4BAAIhC,EAAOsC,UACX,mBACEF,KAAI,0CAAqCpC,EAAO+B,QAChDR,OAAO,SACPc,IAAI,aAHN,gCCtFZE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.38551a98.chunk.js","sourcesContent":["import React from \"react\";\n\nconst App = () => {\n  const [search, setSearch] = React.useState(\"\");\n  const [results, setResults] = React.useState([]);\n  const [searchInfo, setSearchInfo] = React.useState({});\n  const [random, setRandom] = React.useState([]);\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    if (search === \"\") return;\n\n    try {\n      const endpoint = `https://en.wikipedia.org/w/api.php?action=query&list=search&prop=info&inprop=url&utf8=&format=json&origin=*&srlimit=20&srsearch=${search}`;\n      const response = await fetch(endpoint);\n      console.log(response);\n\n      const json = await response.json();\n      console.log(json);\n\n      setResults(json.query.search);\n      setRandom([]);\n      setSearchInfo(json.query.searchinfo);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // end of async handleSearch\n\n  // Random BUTTON\n  const getRandom = async () => {\n    console.log(\"Random\");\n    try {\n      const url = \"https://en.wikipedia.org/api/rest_v1/page/random/summary\";\n\n      const response = await fetch(url);\n\n      const json = await response.json();\n      console.log(json);\n\n      setRandom(json);\n      setResults([]);\n      setSearchInfo({});\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <h1>Wiki Search</h1>\n      <form className=\"search-box\" onSubmit={handleSearch}>\n        <input\n          type=\"search\"\n          placeholder=\"Enter Your Search Term\"\n          name=\"text\"\n          id=\"search\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n        />\n      </form>\n\n      <button type=\"button\" id=\"random\" onClick={getRandom}>\n        Random Article\n      </button>\n\n      {searchInfo.totalhits ? (\n        <p>Search Results: {searchInfo.totalhits}</p>\n      ) : (\n        \"\"\n      )}\n\n      <div className=\"results\">\n        {random.length === 0 ? (\n          results.map((result, i) => {\n            const url = `https://en.wikipedia.org/?curid=${result.pageid}`;\n            return (\n              <div className=\"result\" key={i}>\n                <div>\n                  <h3>{result.title}</h3>\n                  <p dangerouslySetInnerHTML={{ __html: result.snippet }}></p>\n                  <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                    Read More\n                  </a>\n                </div>\n              </div>\n            );\n          })\n        ) : (\n          <div className=\"result\">\n            {random.title}\n            <p>{random.extract}</p>\n            <a\n              href={`https://en.wikipedia.org/?curid=${random.pageid}`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Read More\n            </a>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}